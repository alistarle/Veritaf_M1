machine = [active,passive]{
	etat = 2;
	init = 0,1;
	0 = passive;
        1 = active;
        1 -> 0;
        0 -> 0[p];
};;

probe = [debut,fin]{
	etat = 4;
        init = 0;
        3 = fin;
        0 -> 1 [p2];
        1 -> 2 [p1];
        2 -> 3 [p0];
};;

todot machine.dot machine;;
todot probe.dot probe;;

synchro =< machine m0, machine m2 , machine m1, probe p>{
	< p , _ , _ , p2 >;
	< _ , p , _ , p1 >;
	< _ , _ , p , p0 >;
		
};;
refuse = synchro -> (m0.active || m1.active || m2.active )&& p.fin;;

todot refuse.dot refuse;;

okCTL = synchro -> (m0.passive && m1.passive && m2.passive && p.fin);;
okCTL += AG <- AG(m0.passive && m1.passive && m2.passive && p.fin);;

todot okCTL.dot okCTL;;

okLTL = automaton okCTL;;
todot okLTL.dot okLTL;;
